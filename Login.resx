<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picLogin.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsN
        DhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQU
        FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCAB6AJUDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9U6KKKACiiigAopG6Uxvu0ASUV5f8T/jp4b+Gv+j3byX2rtgp
        p1ngyAZ6scjYMZ5/Q14zJ+2Tq7Xw2+G7P7Hu5gNw7Sbf98ADOP8AZ/OvmcdxHlmXVfY16vvdld29bH1G
        X8M5tmdL2+Ho+73bSv6Xtf8AI+tqbJ92vmPx9+1cLXTNJm8JWSXEt/CXkn1A58hgceWEVhlvViejJ17f
        Pf7Tn7Xfjub4My6ZZtDpN9f3otrzVdNJjkW2wxKJknaWICl8/dZqmlxLltbGRwVOd5PZ209LlVeF81oY
        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
        dgOM/TA9FFX6KACiiigD/9k=
</value>
  </data>
</root>